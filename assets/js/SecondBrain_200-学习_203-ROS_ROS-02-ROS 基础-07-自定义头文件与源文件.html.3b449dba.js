"use strict";(self.webpackChunkvuepress_notes=self.webpackChunkvuepress_notes||[]).push([[976],{628:(s,n)=>{n.A=(s,n)=>{const a=s.__vccOpts||s;for(const[s,i]of n)a[s]=i;return a}},6828:(s,n,a)=>{a.r(n),a.d(n,{comp:()=>l,data:()=>p});var i=a(8178);const e={},l=(0,a(628).A)(e,[["render",function(s,n){return(0,i.uX)(),(0,i.CE)("div",null,n[0]||(n[0]=[(0,i.Fv)('<h1 id="自定义头文件与源文件" tabindex="-1"><a class="header-anchor" href="#自定义头文件与源文件"><span>自定义头文件与源文件</span></a></h1><h2 id="文件结构" tabindex="-1"><a class="header-anchor" href="#文件结构"><span>文件结构</span></a></h2><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-plaintext"><span class="line"><span>工作区</span></span>\n<span class="line"><span>└── src</span></span>\n<span class="line"><span>    └── 功能包</span></span>\n<span class="line"><span>        ├── include</span></span>\n<span class="line"><span>        │   └── 功能包名</span></span>\n<span class="line"><span>        │       └── 头文件.h</span></span>\n<span class="line"><span>        └── src</span></span>\n<span class="line"><span>            ├── 源文件.cpp</span></span>\n<span class="line"><span>            │</span></span>\n<span class="line"><span>            └── 执行文件.cpp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="流程" tabindex="-1"><a class="header-anchor" href="#流程"><span>流程</span></a></h2><ol><li>编写头文件</li><li>编写源文件</li><li>编写可执行文件（需要运行的文件）</li><li>修改 CMakeLists.txt 文件</li></ol><h2 id="头文件的编写" tabindex="-1"><a class="header-anchor" href="#头文件的编写"><span>头文件的编写</span></a></h2><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c++"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#ifndef</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> _大写的头文件名称_H</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#define _大写的头文件名称_H</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">函数或类声明等</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#endif</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h2><p>在 VScode 中，为了后续包含头文件时不抛出异常，请配置 <code>.vscode</code> 下 <code>c_cpp_properties.json</code> 的 <code>includepath</code> 属性</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;功能包的绝对路径/include/**&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="源文件的编写" tabindex="-1"><a class="header-anchor" href="#源文件的编写"><span>源文件的编写</span></a></h2><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c++"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;功能包名/头文件.h&quot;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;ros/ros.h&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">函数实现</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="可执行文件的编写" tabindex="-1"><a class="header-anchor" href="#可执行文件的编写"><span>可执行文件的编写</span></a></h2><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c++"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;ros/ros.h&quot;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;功能包名/头文件.h&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">函数的调用等</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cmakelists-txt-的配置" tabindex="-1"><a class="header-anchor" href="#cmakelists-txt-的配置"><span>CMakeLists.txt 的配置</span></a></h2><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-txt"><span class="line"><span>include_directories(</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>    include # 从本包的头文件路径中查寻和加载头文件</span></span>\n<span class="line"><span>    ${catkin_INCLUDE_DIRS}</span></span>\n<span class="line"><span>)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>## 声明 C++ 库</span></span>\n<span class="line"><span>add_library(库名称（自己命名）</span></span>\n<span class="line"><span>  include/功能包名/头文件.h</span></span>\n<span class="line"><span>  src/源文件.cpp</span></span>\n<span class="line"><span>)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>add_dependencies(库名称 ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>target_link_libraries(库名称</span></span>\n<span class="line"><span>  ${catkin_LIBRARIES}</span></span>\n<span class="line"><span>)</span></span>\n<span class="line"><span>add_executable(执行文件名（自己命名） src/执行文件.cpp)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>add_dependencies(执行文件名 ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#此处需要添加之前设置的 head 库</span></span>\n<span class="line"><span>target_link_libraries(执行文件名</span></span>\n<span class="line"><span>  库名称</span></span>\n<span class="line"><span>  ${catkin_LIBRARIES}</span></span>\n<span class="line"><span>)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',16)]))}]]),p=JSON.parse('{"path":"/SecondBrain/200-%E5%AD%A6%E4%B9%A0/203-ROS/ROS-02-ROS%20%E5%9F%BA%E7%A1%80-07-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%A4%B4%E6%96%87%E4%BB%B6%E4%B8%8E%E6%BA%90%E6%96%87%E4%BB%B6.html","title":"自定义头文件与源文件","lang":"zh-CN","frontmatter":{"description":"自定义头文件与源文件 文件结构 流程 编写头文件 编写源文件 编写可执行文件（需要运行的文件） 修改 CMakeLists.txt 文件 头文件的编写 注意 在 VScode 中，为了后续包含头文件时不抛出异常，请配置 .vscode 下 c_cpp_properties.json 的 includepath 属性 源文件的编写 可执行文件的编写 CM...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自定义头文件与源文件\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Soooooox\\",\\"url\\":\\"https://github.com/Soooooox\\"}]}"],["meta",{"property":"og:url","content":"https://soooooox.github.io/Vuepress-Notes/Vuepress-Notes/SecondBrain/200-%E5%AD%A6%E4%B9%A0/203-ROS/ROS-02-ROS%20%E5%9F%BA%E7%A1%80-07-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%A4%B4%E6%96%87%E4%BB%B6%E4%B8%8E%E6%BA%90%E6%96%87%E4%BB%B6.html"}],["meta",{"property":"og:site_name","content":"Soooooox 的小屋"}],["meta",{"property":"og:title","content":"自定义头文件与源文件"}],["meta",{"property":"og:description","content":"自定义头文件与源文件 文件结构 流程 编写头文件 编写源文件 编写可执行文件（需要运行的文件） 修改 CMakeLists.txt 文件 头文件的编写 注意 在 VScode 中，为了后续包含头文件时不抛出异常，请配置 .vscode 下 c_cpp_properties.json 的 includepath 属性 源文件的编写 可执行文件的编写 CM..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"git":{},"readingTime":{"minutes":1.05,"words":316},"filePathRelative":"SecondBrain/200-学习/203-ROS/ROS-02-ROS 基础-07-自定义头文件与源文件.md","autoDesc":true}')}}]);